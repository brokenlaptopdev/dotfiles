
source "%val{config}/plugins/plug.kak/rc/plug.kak"
plug "robertmeta/plug.kak" noload

plug "kak-lsp/kak-lsp" do %{
    cargo build --release --locked
    cargo install --force --path .
} config %{
    # debugging
    #eval %sh{echo ${kak_opt_lsp_cmd} >> /tmp/kak-lsp.log}
    #set global lsp_cmd "kak-lsp -s %val{session} -vvv -log /tmp/kak-lsp.log"
    
    set global lsp_diagnostic_line_error_sign '║'
    set global lsp_diagnostic_line_warning_sign '┊'

    define-command ne -docstring 'go to next error/warning from lsp' %{ lsp-find-error --include-warnings }
    define-command pe -docstring 'go to previous error/warning from lsp' %{ lsp-find-error --previous --include-warnings }
    define-command ee -docstring 'go to current error/warning from lsp' %{ lsp-find-error --include-warnings; lsp-find-error --previous --include-warnings }

    define-command lsp-restart -docstring 'restart LSP server' %{ lsp-stop; lsp-start }

    #set-option global lsp_completion_trigger "execute-keys 'h<a-h><a-k>\S[^\h\n,=;*(){}\[\]]\z<ret>'"
    
    hook global WinSetOption filetype=(dart|rust|javascript|typescript) %{
        map window user "l" ": enter-user-mode lsp<ret>" -docstring "LSP mode"
        map window insert <c-space> lsp-hover
        lsp-enable-window
        lsp-auto-hover-enable
        lsp-auto-hover-insert-mode-enable
        set-option window lsp_hover_anchor false
        set-face window DiagnosticError default+u
        set-face window DiagnosticWarning default+u
    }
    hook global WinSetOption filetype=rust %{
        set-option window lsp_server_configuration rust.clippy_preference="on"

        # inlay hints
    	hook window -group rust-inlay-hints BufReload .* rust-analyzer-inlay-hints
    	hook window -group rust-inlay-hints NormalIdle .* rust-analyzer-inlay-hints
    	hook window -group rust-inlay-hints InsertIdle .* rust-analyzer-inlay-hints
    	hook -once -always window WinSetOption filetype=.* %{
     		remove-hooks window rust-inlay-hints
    	}
    }
    hook global KakEnd .* lsp-exit
}

plug "brokenlaptopdev/fzf.kak" defer fzf %{
  set global fzf_use_main_selection false
  set global fzf_file_command 'rg -S'
} config %{
  map -docstring 'fzf mode' global user 'f' ': fzf-mode<ret>'
}
plug "andreyorst/smarttab.kak" defer smarttab %{
  # when backspace is pressed, 2 spaces deleted
  set-option global softtabstop 2
} config %{
  hook global WinSetOption filetype=(rust|dart|javascript|typescript|kak|markdown|sh) expandtab
}

plug "alexherbo2/prelude.kak"
plug "alexherbo2/auto-pairs.kak" %{
  require-module prelude
  require-module auto-pairs
  auto-pairs-enable
}

plug "brokenlaptopdev/kakoune-surround" config %{
  declare-user-mode surround
  map global surround s ':surround<ret>' -docstring 'surround'
  map global surround c ':change-surround<ret>' -docstring 'change'
  map global surround d ':delete-surround<ret>' -docstring 'delete'
  map global surround t ':select-surrounding-tag<ret>' -docstring 'select-tag'
  map global user 's' ':enter-user-mode surround<ret>' -docstring 'surround mode'
}

colorscheme github

set-option global grepcmd 'rg -S'
set global indentwidth 2

hook global InsertCompletionShow .* %{
    try %{
        execute-keys -draft 'h<a-K>\h<ret>'
        map window insert <tab> <c-n>
        map window insert <s-tab> <c-p>
    }
}

hook global InsertCompletionHide .* %{
  unmap window insert <tab> <c-n>
  unmap window insert <s-tab> <c-p>
}
